{"version":3,"sources":["components/Navbar.js","components/Clock.js","components/Hello.js","components/State.js","components/Event.js","components/Json.js","components/JsonGit.js","components/Todo.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","Component","Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","Date","_this2","interval","setInterval","tick","clearInterval","setState","toLocaleTimeString","Hello","nama","salam","State","ubahSalam","onClick","Event","handleInput","e","input","target","value","onChange","Json","siswa","nis","map","data","key","JsonGit","fetch","then","response","json","id","harga","src","fotoUrl","alt","Todo","addTodo","preventDefault","jam","refs","aktivitas","todos","push","formulir","reset","focus","removeTodo","splice","indonesia","require","Moment","updateLocale","format","ref","type","placeholder","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","App","components_Navbar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55441308.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport 'bootstrap/scss/bootstrap.scss';\nimport '../assets/sass/style.scss';\nimport {Link} from 'react-router-dom';\n\nclass Navbar extends Component{\n    render(){\n        return (\n            <div>\n                <nav className=\"navbar-expand-lg navbar-dark bg-dark static-top\">\n                    <div className=\"container-fluid\">\n                        <ul className=\"nav navbar-nav\">\n                            <Link className=\"navbar-brand\" to=\"/\">React JS</Link>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/clock\">Clock</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/hello\">Hello</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/state\">State</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/event\">Event</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/json\">JSON</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/json-git\">JSON Git</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/todo\">Todo</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React,{Component} from 'react';\nclass Clock extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            time: new Date()\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    tick() {\n        this.setState({\n          time: new Date()\n        });\n    }\n    \n    render(){\n        return(\n            <div className=\"row justify-content-center\">\n                <div className=\"col-sm-12 col-md-10 col-lg-8 text-center\">\n                    <div className=\"btn btn-lg btn-info\">\n                        {this.state.time.toLocaleTimeString()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Clock;","import React,{Component} from 'react';\nclass Hello extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            nama:'Deki',\n            salam:'My Name Is'\n        }\n    }\n    render(){\n        return(\n            <div className=\"row justify-content-center align-self-center\">\n                <div className=\"col-md-10 col-sm-12 col-lg-8 text-center\">\n                    <button className=\"btn btn-lg btn-info\">{this.state.salam} : <strong>{this.state.nama}</strong> </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Hello;","import React,{Component} from 'react';\n\nclass State extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={salam : 'Halo'};\n    }\n\n    ubahSalam = () => {\n        this.setState({salam : 'Halo dari state'});\n    }\n\n    render(){\n        return(\n            <div className=\"container h-100\">\n                <div className=\"row align-items-center h-100\">\n                    <div className=\"col-6 mx-auto\">\n                        <div className=\"jumbotron\">\n                            <p>Ubah State dengan on Click</p>\n                            <p>Salam : {this.state.salam}</p>\n                            <button className=\"btn btn-sm btn-info\" onClick={this.ubahSalam}>Ubah Salam</button>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default State;","import React,{Component} from 'react';\n\nclass Event extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            input : ''\n        }\n    }\n\n    handleInput = (e) => {\n        this.setState({input: e.target.value})\n    }\n    render(){\n        return(\n            <div className=\"container h-100\">\n                <div className=\"row align-items-center h-100\">\n                    <div className=\"col-6 mx-auto\">\n                        <div className=\"jumbotron\">\n                            <h3>Event On Change</h3>\n                            <p>Mohon isi Input : <input onChange={this.handleInput}/></p>\n                            <p>Hasil : {this.state.input}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Event;","import React,{Component} from 'react';\n\nclass Json extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            siswa : [\n                {\n                    nis:1,\n                    nama: \"Deki Akbar\"\n                },\n                {\n                    nis: 2,\n                    nama: \"Susanto\"\n                },\n                {\n                    nis: 3,\n                    nama: \"Sumitra\"\n                },\n                {\n                    nis: 4,\n                    nama: \"Samijan\"\n                },\n                {\n                    nis: 5,\n                    nama: \"Sandi\"\n                }\n            ]\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"container h-100\">\n                <div className=\"row align-items-center h-100\">\n                    <div className=\"col-6 mx-auto\">\n                        <div className=\"jumbotron\">\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item active\">Fetch Data JSON</li>\n                                {\n                                    this.state.siswa.map((data, key) =>\n                                        <li key={key} className=\"list-group-item\">NIS : <strong>{data.nis}</strong> | Nama : <strong>{data.nama}</strong></li>\n                                    )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Json;","import React,{Component} from 'react';\n\nclass JsonGit extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data : []\n        }\n    }\n\n    componentDidMount(){\n        fetch(\"https://raw.githubusercontent.com/algosigma/js-reactjs/master/homestays.json\")\n        .then(response => response.json())\n        .then((data) => {\n            this.setState({data:data});\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container h-100\">\n                <div className=\"row align-items-center h-100\">\n                    <div className=\"col-6 mx-auto\">\n                        <div className=\"jumbotron\">\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item active\">Fetch Data JSON Github</li>\n                                {\n                                    this.state.data.map((data, key) =>\n                                        <li key={key} className=\"list-group-item\">{data.id}. Nama : <strong>{data.nama}</strong> | Harga : Rp. <strong>{data.harga}K</strong> <img className=\"img-thumbnail\" src={data.fotoUrl} alt={data.nama} /></li>\n                                    )\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default JsonGit;","import React,{Component} from 'react';\nimport Moment from 'moment';\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\nclass Todo extends Component{\n    constructor(props){\n        super(props);\n        this.state = {todos:[]}\n    }\n\n    addTodo = (e) =>{\n        e.preventDefault();\n\n        let jam = this.refs.jam.value;\n        let aktivitas = this.refs.aktivitas.value;\n\n        this.state.todos.push({jam, aktivitas});\n        this.setState({todos:  this.state.todos});\n        this.refs.formulir.reset();\n        this.refs.jam.focus();\n    }\n\n    removeTodo = (key) => {\n        this.state.todos.splice(key,1);\n        this.setState({todos : this.state.todos});\n    }\n\n    render(){\n        let indonesia = require('moment/locale/id');\n        Moment.updateLocale('id',indonesia);\n        return(\n            <div className=\"container h-100\">\n                <div className=\"row align-items-center h-100\">\n                    <div className=\"col-6 mx-auto\">\n                        <div className=\"jumbotron\">\n                            <h3>Aplikasi Aktivitas Harian </h3>\n                            <p>{Moment().format('dddd')} {Moment().format('LLL')}</p>\n                            <form ref=\"formulir\" className=\"form-inline\">\n                                <div className=\"input-group\">\n                                    <input className=\"form-control\" type=\"text\" ref=\"jam\" placeholder=\"Jam Aktivitas\" />\n                                    <input className=\"form-control\" type=\"text\" ref=\"aktivitas\" placeholder=\"Jenis Aktivitas\" />\n                                    <button className=\"btn btn-sm btn-outline-info\" onClick={this.addTodo}>Simpan</button>\n                                </div>\n                            </form>\n                            <hr />\n\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item active\">Jadwal Aplikasi Harian</li>\n                                <TransitionGroup>\n\n                                    {\n                                        this.state.todos.map((data, key) =>\n                                            <CSSTransition\n                                            key={key}\n                                            classNames=\"animasi\"\n                                            timeout={{ enter: 500, exit: 500 }}>\n                                                <li key={key} className=\"list-group-item\">\n                                                    {data.jam} : {data.aktivitas} <button onClick={ ()=> this.removeTodo(key) } className=\"btn btn-sm btn-outline-danger\">Hapus</button>\n                                                </li>\n                                            </CSSTransition>\n                                        )\n                                    }\n\n                                </TransitionGroup>\n                                \n                            </ul>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Todo;","import React from 'react';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './assets/sass/style.scss';\nimport Navbar from './components/Navbar';\nimport Clock from './components/Clock';\nimport Hello from './components/Hello';\nimport State from './components/State';\nimport Event from './components/Event';\nimport Json from './components/Json';\nimport JsonGit from './components/JsonGit';\nimport Todo from './components/Todo';\nimport {Route,BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Route path=\"/clock\" component={Clock}/>\n        <Route path=\"/hello\" component={Hello}/>\n        <Route path=\"/state\" component={State}/>\n        <Route path=\"/event\" component={Event}/>\n        <Route path=\"/json\" component={Json}/>\n        <Route path=\"/json-git\" component={JsonGit}/>\n        <Route path=\"/todo\" component={Todo}/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}